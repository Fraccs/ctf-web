name: release

on:
  push:
    branches: [ "main" ]

jobs:
  detect-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: 6.x
          includePrerelease: true
          preferLatestVersion: true
      - name: Determine Version
        id: execute
        uses: gittools/actions/gitversion/execute@v0
    outputs:
      newVersion: ${{ steps.execute.outputs.fullSemVer }}

  tag-release:
    runs-on: ubuntu-latest
    needs: detect-version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup git
        run: |
          git config user.email "$(git log -1 --pretty=format:%ae)"
          git config user.name "$(git log -1 --pretty=format:%an)"
      - name: Create tag
        run: |
          git tag v${{ needs.detect-version.outputs.newVersion }}
          git push --tags

  bump-package:
    runs-on: ubuntu-latest
    needs: [detect-version, tag-release]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Setup git
        run: |
          git config user.email "$(git log -1 --pretty=format:%ae)"
          git config user.name "$(git log -1 --pretty=format:%an)"
      - name: Bump version
        run: |
          npm --no-git-tag-version version ${{ needs.detect-version.outputs.newVersion }}
          git add .
          git commit -m "bump: ${{ needs.detect-version.outputs.newVersion }}"
          git push

  release-gh:
    runs-on: ubuntu-latest
    needs: [detect-version, tag-release, bump-package]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Release on GitHub
        run: |
          gh release create v${{ needs.detect-version.outputs.newVersion }} -t v${{ needs.detect-version.outputs.newVersion }} --target main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
